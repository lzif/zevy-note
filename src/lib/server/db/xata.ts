// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "app_user",
    checkConstraints: {},
    foreignKeys: {},
    primaryKey: ["id"],
    uniqueConstraints: {
      app_user_username_key: {
        name: "app_user_username_key",
        columns: ["username"],
      },
    },
    columns: [
      {
        name: "id",
        type: "int",
        notNull: true,
        unique: true,
        defaultValue:
          "nextval('bb_kj22jsc9kp715fi358fouk5u84_gko5ru.app_user_id_seq'::regclass)",
        comment: "",
      },
      {
        name: "username",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
    ],
  },
  {
    name: "user_session",
    checkConstraints: {},
    foreignKeys: {
      user_session_user_id_fkey: {
        name: "user_session_user_id_fkey",
        columns: ["user_id"],
        referencedTable: "app_user",
        referencedColumns: ["id"],
        onDelete: "NO ACTION",
      },
    },
    primaryKey: ["id"],
    uniqueConstraints: {},
    columns: [
      {
        name: "expires_at",
        type: "datetime",
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
      {
        name: "id",
        type: "text",
        notNull: true,
        unique: true,
        defaultValue: null,
        comment: "",
      },
      {
        name: "user_id",
        type: "link",
        link: { table: "app_user" },
        notNull: true,
        unique: false,
        defaultValue: null,
        comment: "",
      },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type AppUser = InferredTypes["app_user"];
export type AppUserRecord = AppUser & XataRecord;

export type UserSession = InferredTypes["user_session"];
export type UserSessionRecord = UserSession & XataRecord;

export type DatabaseSchema = {
  app_user: AppUserRecord;
  user_session: UserSessionRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Ryuki-Kazuchi-s-workspace-gko5ru.us-east-1.xata.sh/db/zevy",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
